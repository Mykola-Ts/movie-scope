{"version":3,"file":"static/js/493.fc0cb61f.chunk.js","mappings":"oOAGaA,EAAQC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gXAwBlBC,EAASH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qKAYnBG,EAAQL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4XAoBjBK,EAAeP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uFAMzBO,GAAcT,EAAAA,EAAAA,IAAOU,EAAAA,IAAPV,CAAqBW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iIAUnCU,GAAcZ,EAAAA,EAAAA,IAAOa,EAAAA,IAAPb,CAAqBc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iIAUnCa,EAAYf,EAAAA,GAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0PAavBe,EAAQjB,EAAAA,GAAAA,KAAWkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oY,SCnFnBiB,EAAiB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAC/B,GAAKA,EAAL,CAEA,IAAQC,EAAwBC,EAAAA,GAAAA,QAAfC,EAAeD,EAAAA,GAAAA,WAChCE,EAMIJ,EALFK,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAIEN,EAJFM,aAAYC,EAIVP,EAHFQ,MAAAA,OAAK,IAAAD,GAAQA,EACbE,EAEET,EAFFS,YAAWC,EAETV,EADFW,aAAAA,OAAY,IAAAD,EAAG,EAACA,EAEZE,EAAYH,EAAW,GAAAI,OACtBZ,EAAO,MAAAY,OAAKV,EAAU,KAAAU,OAAIJ,GAC7BK,EAEEC,EADc,IAAIC,KAAKV,GACGW,eAAiB,KAEjD,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACvC,EAAM,CACLwC,IAAKV,EACLW,IAAG,wBAAAV,OAA0BR,GAC7BmB,MAAOrB,EACPsB,OAAqB,IAAbtB,KAGVe,EAAAA,EAAAA,MAACxC,EAAK,CAAA0C,SAAA,CACHf,IAASa,EAAAA,EAAAA,MAAClC,EAAK,CAAAoC,SAAA,CAAEf,EAAM,QAExBa,EAAAA,EAAAA,MAAChC,EAAY,CAAAkC,SAAA,EACXC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CACLC,UAAU,EACVC,KAAM,GACNC,KAAM,EACNC,cAAenB,EACfoB,aAAaV,EAAAA,EAAAA,KAACjC,EAAW,CAAC4C,MAAM,sBAChCC,YAAYZ,EAAAA,EAAAA,KAAC9B,EAAW,CAACyC,MAAM,wBAGhCjB,IAAeM,EAAAA,EAAAA,KAAC3B,EAAS,CAAA0B,SAAEL,UAI/BP,IAASa,EAAAA,EAAAA,KAACzB,EAAK,CAAAwB,SAAC,UA1CH,CA6CpB,E,UC1Dac,EAAOvD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAShBsD,EAAWxD,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0tBAkCpBuD,GAAazD,EAAAA,EAAAA,IAAO0D,EAAAA,GAAP1D,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yEC1CzByD,EAAa,SAAHvC,GAAoD,IAADwC,EAAAxC,EAA7CyC,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAA1C,EAAE2C,MAAAA,OAAK,IAAAD,EAAG,IAAGA,EAAEE,EAAY5C,EAAZ4C,aACrD,OACEtB,EAAAA,EAAAA,KAACa,EAAI,CAACU,IAAKD,EAAavB,SACrBoB,EAAOK,KAAI,SAAA7C,GAAK,OACfqB,EAAAA,EAAAA,KAACc,EAAQ,CAAAf,UACPC,EAAAA,EAAAA,KAACe,EAAU,CAACU,GAAE,WAAAjC,OAAab,EAAM+C,IAAML,MAAOA,EAAMtB,UAClDC,EAAAA,EAAAA,KAACvB,EAAc,CAACE,MAAOA,OAFZA,EAAM+C,GAIV,KAInB,C,2KCdaC,EAAarE,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kFAOtBoE,EAAiBtE,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mJAU1BqE,EAAkBvE,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0rB,SCZ/BsE,EAAqB,CAChCC,IAAK,CACHC,MAAO,MACPhD,MAAO,kBAETiD,KAAM,CACJD,MAAO,OACPhD,MAAO,uBAIEkD,EAAkC,SAAHxD,GAGrC,IAADyD,EAAAzD,EAFJ0D,WAAAA,OAAU,IAAAD,EAAGL,EAAmBC,IAAIC,MAAKG,EACvBE,EAAwB3D,EAA1C4D,iBAEA,OACEzC,EAAAA,EAAAA,MAAC8B,EAAU,CAAA5B,SAAA,EACTC,EAAAA,EAAAA,KAAC4B,EAAc,CAAA7B,UACbC,EAAAA,EAAAA,KAAC6B,EAAe,CACdU,KAAK,SACLC,KAAMV,EAAmBC,IAAIC,MAC7BS,UACEL,IAAeN,EAAmBC,IAAIC,MAAQ,SAAW,GAE3DU,QAAS,SAAAC,GAAG,OAAIN,EAAyBM,EAAIC,OAAOJ,KAAK,EAACzC,SAEzD+B,EAAmBC,IAAI/C,WAI5BgB,EAAAA,EAAAA,KAAC4B,EAAc,CAAA7B,UACbC,EAAAA,EAAAA,KAAC6B,EAAe,CACdU,KAAK,SACLC,KAAMV,EAAmBG,KAAKD,MAC9BS,UACEL,IAAeN,EAAmBG,KAAKD,MAAQ,SAAW,GAE5DU,QAAS,SAAAC,GAAG,OAAIN,EAAyBM,EAAIC,OAAOJ,KAAK,EAACzC,SAEzD+B,EAAmBG,KAAKjD,YAKnC,E,UCjDa6D,EAAevF,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yvBCE5BsF,EAAc,SAAHpE,GAA4C,IAAtCqE,EAAUrE,EAAVqE,WAAYC,EAAStE,EAATsE,UAAWN,EAAOhE,EAAPgE,QACnD,OACE7C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIiD,IAAcD,IACd/C,EAAAA,EAAAA,KAAC6C,EAAY,CAACN,KAAK,SAASG,QAASA,EAAQ3C,SAAC,eAKhDC,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACD,UAAWA,EAAWE,gBAAgB,MAGpD,ECdavF,EAAQL,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8PCmF9B,EAxEa,WAAO,IAAD2F,EACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCvC,EAAMyC,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAoCH,EAAAA,EAAAA,UACH,QADWR,EAC1CK,EAAaO,IAAI,sBAAc,IAAAZ,EAAAA,EAAIrB,EAAmBC,IAAIC,OAC3DgC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAFM1B,EAAU4B,EAAA,GAAEC,EAAaD,EAAA,GAGhCE,GAAwBP,EAAAA,EAAAA,UAASQ,OAAOX,EAAaO,IAAI,SAAW,IAAGK,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAhEG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAkChB,EAAAA,EAAAA,WAAS,GAAMiB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA1C3B,EAAS4B,EAAA,GAAEC,EAAYD,EAAA,GACxBE,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,WAgBR,OAfIF,EAAcG,SAChBH,EAAcG,QAAQC,QAGxBJ,EAAcG,QAAU,IAAIE,iBAE5BC,EAAAA,EAAAA,IACElD,EACAiC,EACAR,EACAa,EACAG,EACAG,EAAcG,SAGT,WACLH,EAAcG,QAAQC,QACtBG,EAAAA,GAAAA,QACF,CACF,GAAG,CAACnD,EAAYiC,EAAMI,IActB,OACE5E,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACkC,EAA+B,CAC9BE,WAAYA,EACZE,iBAhB2B,SAAAF,GAC/BoB,EAAagC,IAAI,cAAepD,GAEhCqB,EAAgBD,GAChBS,EAAcnC,EAAmBM,GAAYJ,OAC7CsC,EAAQ,EACV,KAaItE,EAAAA,EAAAA,KAACrC,EAAK,CAAAoC,SAAE+B,EAAmBM,GAAYpD,QAEtCmC,EAAOsE,OAAS,IACf5F,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACE,OAAQA,EAAQE,MAAO,CAAEqE,KAAMZ,MAE3C9E,EAAAA,EAAAA,KAAC8C,EAAW,CACVC,WAAYsB,IAASI,EACrBzB,UAAWA,EACXN,QApBiB,WACzB4B,GAAQ,SAAAqB,GAAI,OAAKA,EAAQ,CAAC,GAC5B,OAuBc,IAATtB,IAAcrE,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACD,UAAWA,MAGxC,C","sources":["components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/ChangeTrendingTimeWindowButtons/ChangeTrendingTimeWindowButtons.styled.js","components/ChangeTrendingTimeWindowButtons/ChangeTrendingTimeWindowButtons.jsx","components/ShowMoreBtn/ShowMoreBtn.styled.js","components/ShowMoreBtn/ShowMoreBtn.jsx","pages/Home.styled.js","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { AiOutlineStar, AiTwotoneStar } from 'react-icons/ai';\n\nexport const Descr = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n\n  padding: 8px;\n\n  @media screen and (min-width: 375px) {\n    height: 116px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 100px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 12px;\n\n    height: 128px;\n    padding: 12px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    height: 320px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 388px;\n  }\n`;\n\nexport const Title = styled.h3`\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  margin: auto 0;\n  overflow: hidden;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    font-size: 18px;\n    line-height: 1.33;\n    letter-spacing: -0.36px;\n  }\n`;\n\nexport const DescrWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const OutlineStar = styled(AiOutlineStar)`\n  width: 32px;\n  height: 32px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const TwotoneStar = styled(AiTwotoneStar)`\n  width: 32px;\n  height: 32px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const DescrYear = styled.span`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    font-size: 18px;\n    line-height: 1.33;\n    letter-spacing: -0.36px;\n  }\n`;\n\nexport const Adult = styled.span`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  padding: 8px;\n\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: 0.96px;\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    font-size: 18px;\n    line-height: 1.33;\n    letter-spacing: 0.36px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Rating from 'react-rating';\nimport posterPlaceholder from '../../img/poster-placeholder.jpg';\nimport { configurationImages } from 'helpers/helpers';\nimport {\n  Adult,\n  Descr,\n  DescrWrapper,\n  DescrYear,\n  OutlineStar,\n  Poster,\n  Title,\n  TwotoneStar,\n} from './MoviesListItem.styled';\n\nexport const MoviesListItem = ({ movie }) => {\n  if (!movie) return;\n\n  const { baseUrl, posterSize } = configurationImages;\n  const {\n    title = '',\n    release_date,\n    adult = false,\n    poster_path,\n    vote_average = 0,\n  } = movie;\n  const posterSrc = poster_path\n    ? `${baseUrl}/w${posterSize}/${poster_path}`\n    : posterPlaceholder;\n  const releaseDate = new Date(release_date);\n  const releaseYear = releaseDate.getFullYear() || null;\n\n  return (\n    <>\n      <Poster\n        src={posterSrc}\n        alt={`Poster for the movie ${title}`}\n        width={posterSize}\n        height={posterSize * 1.5}\n      />\n\n      <Descr>\n        {title && <Title>{title} </Title>}\n\n        <DescrWrapper>\n          <Rating\n            readonly={true}\n            stop={10}\n            step={2}\n            initialRating={vote_average}\n            emptySymbol={<OutlineStar color=\"var(--gold-color)\" />}\n            fullSymbol={<TwotoneStar color=\"var(--gold-color)\" />}\n          />\n\n          {releaseYear && <DescrYear>{releaseYear}</DescrYear>}\n        </DescrWrapper>\n      </Descr>\n\n      {adult && <Adult>18+</Adult>}\n    </>\n  );\n};\n\nMoviesListItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px 24px;\n\n  width: 100%;\n  padding: 40px 0;\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  transform: scale(1, 1);\n\n  display: flex;\n\n  width: 100%;\n  border-radius: 8px;\n\n  overflow: hidden;\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n  box-shadow: var(--box-shadow);\n\n  transition: background-color var(--transition-duration)\n      var(--transition-timing-function),\n    transform var(--transition-duration) var(--transition-timing-function);\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 32px * 2) / 3);\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100% - 24px * 4) / 5);\n  }\n\n  &:is(:hover, :focus) {\n    transform: scale(1.04, 1.04);\n\n    background-color: var(--gray-active-color);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n\n  width: 100%;\n\n  color: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\nimport { List, ListItem, StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies = [], state = '/', movieListRef }) => {\n  return (\n    <List ref={movieListRef}>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={state}>\n            <MoviesListItem movie={movie} />\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  state: PropTypes.object,\n  movieListRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n};\n","import styled from 'styled-components';\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 24px;\n`;\n\nexport const ButtonListItem = styled.li`\n  &:first-child button {\n    border-radius: 8px 0px 0px 8px;\n  }\n\n  &:last-child button {\n    border-radius: 0px 8px 8px 0px;\n  }\n`;\n\nexport const ChangePeriodBtn = styled.button`\n  min-width: 160px;\n  border: 2px solid var(--black-color);\n  padding: 4px 8px;\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n  outline: 2px solid transparent;\n\n  transition: background-color var(--transition-duration)\n      var(--transition-timing-function),\n    border-color var(--transition-duration) var(--transition-timing-function),\n    outline var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus),\n  &.active {\n    background-color: var(--white-color);\n    border-color: var(--black-color);\n    outline-color: var(--white-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 180px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ButtonList,\n  ButtonListItem,\n  ChangePeriodBtn,\n} from './ChangeTrendingTimeWindowButtons.styled';\n\nexport const trendingTimeWindow = {\n  day: {\n    value: 'day',\n    title: 'Trending today',\n  },\n  week: {\n    value: 'week',\n    title: 'Trending this week',\n  },\n};\n\nexport const ChangeTrendingTimeWindowButtons = ({\n  timeWindow = trendingTimeWindow.day.value,\n  changeTimeWindow: changeTrendingTimeWindow,\n}) => {\n  return (\n    <ButtonList>\n      <ButtonListItem>\n        <ChangePeriodBtn\n          type=\"button\"\n          name={trendingTimeWindow.day.value}\n          className={\n            timeWindow === trendingTimeWindow.day.value ? 'active' : ''\n          }\n          onClick={evt => changeTrendingTimeWindow(evt.target.name)}\n        >\n          {trendingTimeWindow.day.title}\n        </ChangePeriodBtn>\n      </ButtonListItem>\n\n      <ButtonListItem>\n        <ChangePeriodBtn\n          type=\"button\"\n          name={trendingTimeWindow.week.value}\n          className={\n            timeWindow === trendingTimeWindow.week.value ? 'active' : ''\n          }\n          onClick={evt => changeTrendingTimeWindow(evt.target.name)}\n        >\n          {trendingTimeWindow.week.title}\n        </ChangePeriodBtn>\n      </ButtonListItem>\n    </ButtonList>\n  );\n};\n\nChangeTrendingTimeWindowButtons.propTypes = {\n  timeWindow: PropTypes.string.isRequired,\n  changeTimeWindow: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: block;\n\n  min-width: 160px;\n  border: 2px solid var(--black-color);\n  border-radius: 8px;\n  padding: 4px 8px;\n  margin: 0 auto;\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n  outline: 2px solid transparent;\n\n  transition: background-color var(--transition-duration)\n      var(--transition-timing-function),\n    border-color var(--transition-duration) var(--transition-timing-function),\n    outline var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus),\n  &.active {\n    background-color: var(--white-color);\n    border-color: var(--black-color);\n    outline-color: var(--white-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 180px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader/Loader';\nimport { StyledButton } from './ShowMoreBtn.styled';\n\nexport const ShowMoreBtn = ({ isLastPage, isLoading, onClick }) => {\n  return (\n    <>\n      {!isLoading && !isLastPage && (\n        <StyledButton type=\"button\" onClick={onClick}>\n          Show more\n        </StyledButton>\n      )}\n\n      <Loader isLoading={isLoading} isCommonLoader={false} />\n    </>\n  );\n};\n\nShowMoreBtn.propTypes = {\n  isLastPage: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 24px;\n\n  text-align: center;\n  font-size: 32px;\n  line-height: 1.19;\n  letter-spacing: -1.28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n    line-height: 1.08;\n    letter-spacing: -1.92px;\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { getTopMovies } from 'services/movies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport {\n  ChangeTrendingTimeWindowButtons,\n  trendingTimeWindow,\n} from 'components/ChangeTrendingTimeWindowButtons/ChangeTrendingTimeWindowButtons';\nimport { ShowMoreBtn } from 'components/ShowMoreBtn/ShowMoreBtn';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [timeWindow, setTimeWindow] = useState(\n    searchParams.get('time_window') ?? trendingTimeWindow.day.value\n  );\n  const [page, setPage] = useState(Number(searchParams.get('page') || 1));\n  const [totalPages, setTotalPages] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const controllerRef = useRef();\n\n  useEffect(() => {\n    if (controllerRef.current) {\n      controllerRef.current.abort();\n    }\n\n    controllerRef.current = new AbortController();\n\n    getTopMovies(\n      timeWindow,\n      page,\n      setMovies,\n      setTotalPages,\n      setIsLoading,\n      controllerRef.current\n    );\n\n    return () => {\n      controllerRef.current.abort();\n      toast.remove();\n    };\n  }, [timeWindow, page, totalPages]);\n\n  const changeTrendingTimeWindow = timeWindow => {\n    searchParams.set('time_window', timeWindow);\n\n    setSearchParams(searchParams);\n    setTimeWindow(trendingTimeWindow[timeWindow].value);\n    setPage(1);\n  };\n\n  const onClickShowMoreBtn = () => {\n    setPage(prev => (prev += 1));\n  };\n\n  return (\n    <main>\n      <ChangeTrendingTimeWindowButtons\n        timeWindow={timeWindow}\n        changeTimeWindow={changeTrendingTimeWindow}\n      />\n\n      <Title>{trendingTimeWindow[timeWindow].title}</Title>\n\n      {movies.length > 0 && (\n        <>\n          <MoviesList movies={movies} state={{ from: location }} />\n\n          <ShowMoreBtn\n            isLastPage={page === totalPages}\n            isLoading={isLoading}\n            onClick={onClickShowMoreBtn}\n          />\n        </>\n      )}\n\n      {page === 1 && <Loader isLoading={isLoading} />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Descr","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","Title","_templateObject3","DescrWrapper","_templateObject4","OutlineStar","AiOutlineStar","_templateObject5","TwotoneStar","AiTwotoneStar","_templateObject6","DescrYear","_templateObject7","Adult","_templateObject8","MoviesListItem","_ref","movie","baseUrl","configurationImages","posterSize","_movie$title","title","release_date","_movie$adult","adult","poster_path","_movie$vote_average","vote_average","posterSrc","concat","posterPlaceholder","releaseYear","Date","getFullYear","_jsxs","_Fragment","children","_jsx","src","alt","width","height","Rating","readonly","stop","step","initialRating","emptySymbol","color","fullSymbol","List","ListItem","StyledLink","Link","MoviesList","_ref$movies","movies","_ref$state","state","movieListRef","ref","map","to","id","ButtonList","ButtonListItem","ChangePeriodBtn","trendingTimeWindow","day","value","week","ChangeTrendingTimeWindowButtons","_ref$timeWindow","timeWindow","changeTrendingTimeWindow","changeTimeWindow","type","name","className","onClick","evt","target","StyledButton","ShowMoreBtn","isLastPage","isLoading","Loader","isCommonLoader","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","_useState3","get","_useState4","setTimeWindow","_useState5","Number","_useState6","page","setPage","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","setIsLoading","location","useLocation","controllerRef","useRef","useEffect","current","abort","AbortController","getTopMovies","toast","set","length","from","prev"],"sourceRoot":""}