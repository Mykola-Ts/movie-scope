{"version":3,"file":"static/js/878.aee3ecfe.chunk.js","mappings":"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","sources":["components/MovieDescr/MovieDescr.styled.js","components/MovieDescr/MovieDescr.jsx","components/MovieDescrAdditional/MovieDescrAdditional.styled.js","components/MovieDescrAdditional/MovieDescrAdditional.jsx","components/ToBackLink/ToBackLink.styled.js","components/ToBackLink/ToBackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Details = styled.div`\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: var(--text-gray-color);\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n    line-height: normal;\n    letter-spacing: 0.44px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 60px;\n  }\n`;\n\nexport const Poster = styled.img`\n  max-width: 342px;\n  border-radius: 8px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 16px;\n\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: 0.96px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 32px;\n    line-height: 1.19;\n    letter-spacing: 1.28px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 700;\n\n  & ul {\n    @media screen and (min-width: 1440px) {\n      display: flex;\n      gap: 4px;\n    }\n  }\n`;\n\nexport const MovieLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  font-weight: 700;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--white-color);\n  }\n`;\n\nexport const DescrValue = styled.span`\n  font-weight: 400;\n`;\n\nexport const ListValues = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0 4px;\n\n  font-weight: 400;\n\n  & li:not(:last-child)::after {\n    content: ',';\n  }\n`;\n\nexport const Overview = styled.div`\n  margin-bottom: 16px;\n\n  font-weight: 700;\n\n  & p:first-child {\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Rating from 'react-rating';\nimport { AiOutlineStar, AiTwotoneStar } from 'react-icons/ai';\nimport { FiExternalLink } from 'react-icons/fi';\nimport posterPlaceholder from '../../img/poster-placeholder.jpg';\nimport { configurationImages } from 'helpers/helpers';\nimport {\n  ListItem,\n  DescrValue,\n  Details,\n  Wrapper,\n  Poster,\n  Title,\n  List,\n  MovieLink,\n  Overview,\n  ListValues,\n} from './MovieDescr.styled';\n\nexport const MovieDescr = ({ movieDetails }) => {\n  if (!movieDetails) return;\n\n  const {\n    title = '',\n    overview = '',\n    poster_path = '',\n    original_title = '',\n    genres = [],\n    adult = false,\n    original_language = '',\n    homepage = '',\n    production_countries = [],\n    production_companies = [],\n    release_date,\n    runtime = '',\n    budget = '',\n    revenue = '',\n    popularity = 0,\n    vote_average = 0,\n    vote_count = 0,\n  } = movieDetails;\n  const { baseUrl, posterSize } = configurationImages;\n  const date = new Date(release_date);\n  const releaseDate = date.toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const releaseYear = date.getFullYear() || null;\n  const posterSrc = poster_path\n    ? `${baseUrl}/w${posterSize}/${poster_path}`\n    : posterPlaceholder;\n  const moviePopularity = popularity.toFixed(1);\n  const voteAverage = vote_average.toFixed(1);\n\n  return (\n    <Details>\n      <Title>\n        {title} {releaseYear && <span>({releaseYear})</span>}\n      </Title>\n\n      <Wrapper>\n        <Poster src={posterSrc} alt=\"Poster\" width={posterSize} height={513} />\n\n        <List>\n          <ListItem>\n            {homepage && (\n              <MovieLink\n                href={homepage}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Homepage Movie <FiExternalLink />\n              </MovieLink>\n            )}\n          </ListItem>\n\n          <ListItem>\n            Original title: <DescrValue>{original_title}</DescrValue>\n          </ListItem>\n\n          {genres.length > 0 && (\n            <ListItem>\n              <p>Genres:</p>\n              <ListValues>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n\n          {runtime > 0 && (\n            <ListItem>\n              Runtime: <DescrValue>{runtime} minutes</DescrValue>\n            </ListItem>\n          )}\n\n          {adult && (\n            <ListItem>\n              Adult: <DescrValue>18+</DescrValue>\n            </ListItem>\n          )}\n\n          <ListItem>\n            Original language: <DescrValue>{original_language}</DescrValue>\n          </ListItem>\n\n          {releaseDate !== 'Invalid Date' && (\n            <ListItem>\n              Release date: <DescrValue>{releaseDate}</DescrValue>\n            </ListItem>\n          )}\n\n          {production_countries.length > 0 && (\n            <ListItem>\n              <p>Production countries:</p>\n              <ListValues>\n                {production_countries.map(({ iso_3166_1, name }) => (\n                  <li key={iso_3166_1}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n\n          {production_companies.length > 0 && (\n            <ListItem>\n              <p>Production companies:</p>\n              <ListValues>\n                {production_companies.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n\n          {budget > 0 && (\n            <ListItem>\n              Budget: <DescrValue>${budget}</DescrValue>\n            </ListItem>\n          )}\n\n          {revenue > 0 && (\n            <ListItem>\n              Revenue: <DescrValue>${revenue}</DescrValue>\n            </ListItem>\n          )}\n\n          <ListItem>\n            Popularity: <DescrValue>{moviePopularity}</DescrValue>\n          </ListItem>\n\n          <ListItem>\n            Vote average: <DescrValue>{voteAverage}</DescrValue>\n          </ListItem>\n\n          <ListItem>\n            Vote count: <DescrValue>{vote_count}</DescrValue>\n          </ListItem>\n\n          <ListItem>\n            <Rating\n              readonly={true}\n              stop={10}\n              initialRating={vote_average}\n              emptySymbol={\n                <AiOutlineStar color=\"var(--gold-color)\" size={32} />\n              }\n              fullSymbol={<AiTwotoneStar color=\"var(--gold-color)\" size={32} />}\n            />\n          </ListItem>\n        </List>\n      </Wrapper>\n\n      {overview && (\n        <Overview>\n          <p>Overview</p>\n          <DescrValue>{overview}</DescrValue>\n        </Overview>\n      )}\n    </Details>\n  );\n};\n\nMovieDescr.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: var(--text-gray-color);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n    line-height: normal;\n    letter-spacing: 0.44px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 16px;\n\n  font-weight: 700;\n`;\n\nexport const Links = styled.ul`\n  display: flex;\n`;\n\nexport const LinksItem = styled.li`\n  &:first-child a {\n    border-radius: 8px 0px 0px 8px;\n  }\n\n  &:last-child a {\n    border-radius: 0px 8px 8px 0px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  min-width: 160px;\n  border: 2px solid var(--black-color);\n  padding: 4px 8px;\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n  outline: 2px solid transparent;\n\n  transition: background-color var(--transition-duration)\n      var(--transition-timing-function),\n    border-color var(--transition-duration) var(--transition-timing-function),\n    outline var(--transition-duration) var(--transition-timing-function);\n\n  @media screen and (min-width: 768px) {\n    min-width: 180px;\n  }\n\n  &:is(:hover, :focus),\n  &.active {\n    background-color: var(--white-color);\n    border-color: var(--black-color);\n    outline-color: var(--white-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Links,\n  LinksItem,\n  StyledNavLink,\n  Title,\n  Wrapper,\n} from './MovieDescrAdditional.styled';\n\nexport const MovieDescrAdditional = ({ location }) => {\n  return (\n    <Wrapper>\n      <Title>Additional information</Title>\n\n      <Links>\n        <LinksItem>\n          <StyledNavLink to=\"cast\" state={{ from: location }}>\n            Show the cast\n          </StyledNavLink>\n        </LinksItem>\n\n        <LinksItem>\n          <StyledNavLink to=\"reviews\" state={{ from: location }}>\n            Show reviews\n          </StyledNavLink>\n        </LinksItem>\n      </Links>\n    </Wrapper>\n  );\n};\n\nMovieDescrAdditional.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  padding: 4px;\n  margin-bottom: 16px;\n\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--white-color);\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    transform: scaleX(0);\n    transform-origin: center;\n\n    display: block;\n\n    width: 100%;\n    height: 1.5px;\n\n    background-color: currentColor;\n\n    transition: transform var(--transition-duration)\n      var(--transition-timing-function);\n  }\n\n  &:is(:hover, :focus)::after {\n    transform: scaleX(1);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { StyledLink } from './ToBackLink.styled';\n\nexport const ToBackLink = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <StyledLink to={backLinkHref}>\n      <BiArrowBack size={20} /> Back to movies\n    </StyledLink>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { getDetailsMovieById } from 'services/movies';\nimport { defaultErrorMessage } from 'helpers/helpers';\nimport { MovieDescr } from 'components/MovieDescr/MovieDescr';\nimport { MovieDescrAdditional } from 'components/MovieDescrAdditional/MovieDescrAdditional';\nimport { ToBackLink } from 'components/ToBackLink/ToBackLink';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) {\n      toast.remove();\n      toast.error(defaultErrorMessage);\n\n      return;\n    }\n\n    const controller = new AbortController();\n\n    getDetailsMovieById(movieId, setMovieDetails, setIsLoading, controller);\n\n    return () => {\n      controller.abort();\n      toast.remove();\n    };\n  }, [movieId]);\n\n  return (\n    <main>\n      <div>\n        <ToBackLink />\n\n        {movieDetails && (\n          <>\n            <MovieDescr movieDetails={movieDetails} />\n            <MovieDescrAdditional\n              location={location.state?.from ?? { pathname: '/' }}\n            />\n          </>\n        )}\n\n        <Suspense fallback={<Loader isLoading={true} />}>\n          <Outlet />\n        </Suspense>\n\n        <Loader isLoading={isLoading} />\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Details","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Poster","_templateObject3","Title","_templateObject4","List","_templateObject5","ListItem","_templateObject6","MovieLink","_templateObject7","DescrValue","_templateObject8","ListValues","_templateObject9","Overview","_templateObject10","MovieDescr","_ref","movieDetails","_movieDetails$title","title","_movieDetails$overvie","overview","_movieDetails$poster_","poster_path","_movieDetails$origina","original_title","_movieDetails$genres","genres","_movieDetails$adult","adult","_movieDetails$origina2","original_language","_movieDetails$homepag","homepage","_movieDetails$product","production_countries","_movieDetails$product2","production_companies","release_date","_movieDetails$runtime","runtime","_movieDetails$budget","budget","_movieDetails$revenue","revenue","_movieDetails$popular","popularity","_movieDetails$vote_av","vote_average","_movieDetails$vote_co","vote_count","baseUrl","configurationImages","posterSize","date","Date","releaseDate","toLocaleString","year","month","day","releaseYear","getFullYear","posterSrc","concat","posterPlaceholder","moviePopularity","toFixed","voteAverage","_jsxs","children","_jsx","src","alt","width","height","href","target","rel","FiExternalLink","length","map","_ref2","id","name","_ref3","iso_3166_1","_ref4","Rating","readonly","stop","initialRating","emptySymbol","AiOutlineStar","color","size","fullSymbol","AiTwotoneStar","Links","LinksItem","StyledNavLink","NavLink","MovieDescrAdditional","location","to","state","from","StyledLink","Link","ToBackLink","_location$state$from","_location$state","backLinkHref","useLocation","BiArrowBack","_useState","useState","_useState2","_slicedToArray","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","toast","defaultErrorMessage","controller","AbortController","getDetailsMovieById","abort","_Fragment","pathname","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}